@model List<ColegioGuaxinim.Application.DTO.AlunoDTO.AlunoListaDto>
@{
    ViewData["Title"] = "Alunos";
    var professorId = ViewBag.ProfessorId;
}
<form id="form-token">@Html.AntiForgeryToken()</form>

<h2 class="mb-4">📚 Alunos</h2>

<!-- Alertas -->
@if (TempData["Mensagem"] is string mensagem)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Html.Raw(mensagem)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Erros"] is string erros)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @Html.Raw(erros)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Formulário de Importação -->
<form asp-action="Importar" method="post" enctype="multipart/form-data" class="border rounded p-3 bg-light mb-4">
    <input type="hidden" name="professorId" value="@professorId" />

    <div class="mb-3">
        <label for="arquivo" class="form-label fw-bold">Importar Alunos (.txt)</label>
        <input type="file" name="arquivo" id="arquivo" class="form-control" required />
        <div class="form-text">Formato: NomeAluno||ValorMensalidade||DataVencimento</div>
    </div>

    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-info">
            <i class="bi bi-upload"></i> Importar
        </button>
    </div>
</form>

<!-- Lista de Alunos -->
@if (!Model.Any())
{
    <div class="alert alert-info mt-3">
        Nenhum aluno cadastrado ainda para este professor.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-hover align-middle shadow-sm">
            <thead class="table-purple">
                <tr>
                    <th>Nome</th>
                    <th>Mensalidade</th>
                    <th>Vencimento</th>
                    <th class="text-center" style="width: 120px;">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var aluno in Model)
                {
                    <tr id="linha-aluno-@aluno.Id">
                        <td>@aluno.Nome</td>
                        <td>R$ @aluno.Mensalidade.ToString("N2")</td>
                        <td>@aluno.DataVencimento.ToString("dd/MM/yyyy")</td>
                        <td class="text-center">
                            <button class="btn btn-outline-danger btn-sm" onclick="excluirAluno(@aluno.Id)">
                                <i class="bi bi-trash"></i> Excluir
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Botão Voltar -->
<a href="@Url.Action("Index", "Professores")" class="btn btn-outline-primary mt-3">
    <i class="bi bi-arrow-left"></i> Voltar para Professores
</a>

<!-- Toast container opcional -->
<div id="toast-container" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

@section Scripts {
    <script>
        function excluirAluno(id) {
            const professorId = @ViewBag.ProfessorId;
            const token = document.querySelector('#form-token input[name="__RequestVerificationToken"]').value;

            fetch(`/Alunos/Delete?professorId=${professorId}&alunoId=${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                }
            }).then(r => {
                if (r.ok) {
                    document.getElementById(`linha-aluno-${id}`).remove();
                } else {
                    alert("Erro ao excluir aluno.");
                }
            });
        }
    </script>
}
