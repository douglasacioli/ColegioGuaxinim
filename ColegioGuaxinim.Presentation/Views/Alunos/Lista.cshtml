@model List<ColegioGuaxinim.Application.DTO.AlunoDTO.AlunoListaDto>
@{
    ViewData["Title"] = "Alunos";
    var professorId = ViewBag.ProfessorId;
}
<form id="form-token">@Html.AntiForgeryToken()</form>

<h2>Lista de Alunos</h2>

<a href="@Url.Action("Index", "Professores")" class="btn btn-secondary mb-3">Voltar para Professores</a>

@if (TempData["Mensagem"] is string mensagem)
{
    <div class="alert alert-success">@Html.Raw(mensagem)</div>
}

@if (TempData["Erros"] is string erros)
{
    <div class="alert alert-warning">@Html.Raw(erros)</div>
}

<!-- Importação -->
<form asp-action="Importar" method="post" enctype="multipart/form-data">
    <input type="hidden" name="professorId" value="@professorId" />
    <div class="form-group">
        <label>Importar Alunos (.txt)</label>
        <input type="file" name="arquivo" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-info mt-2"> <i class="bi bi-upload"></i> Importar</button>
</form>

<hr />

@if (!Model.Any())
{
    <div class="alert alert-info mt-3">
        Nenhum aluno cadastrado ainda para este professor.
    </div>
}
else
{
    <table class="table table-striped mt-3">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Mensalidade</th>
                <th>Data de Vencimento</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var aluno in Model)
            {
                <tr id="linha-aluno-@aluno.Id">
                    <td>@aluno.Nome</td>
                    <td>R$ @aluno.Mensalidade.ToString("N2")</td>
                    <td>@aluno.DataVencimento.ToString("dd/MM/yyyy")</td>
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="excluirAluno(@aluno.Id)">Excluir</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<div id="toast-container" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

@section Scripts {
    <script>
        function excluirAluno(id) {
            const professorId = @ViewBag.ProfessorId;
            const token = document.querySelector('#form-token input[name="__RequestVerificationToken"]').value;

            fetch(`/Alunos/Delete?professorId=${professorId}&alunoId=${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                }
            }).then(r => {
                if (r.ok) {
                    document.getElementById(`linha-aluno-${id}`).remove();
                } else {
                    alert("Erro ao excluir aluno.");
                }
            });
        }
    </script>
}
